name: build

on: [push, pull_request]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
      - name: Setup Traefik
        run: docker network create traefik
      - name: Setup Docker container
        run: |
          cp src/.env-example src/.env && cp .env-example .env
          ./setup.sh
          docker ps | grep -q easypost-tools-ui-easypost-tools-ui-1
          docker ps | grep -q easypost-tools-ui-easypost-tools-db-1
          docker exec -t easypost-tools-ui-easypost-tools-ui-1 curl -f http://localhost
  lint-php:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
      - name: Install Composer
        run: cd src && composer self-update
      - name: Install Dependencies
        run: |
          cd src
          composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
          npm install
      - name: Lint
        run: cd src && composer lint
  lint-sass:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        run: cd src && npm install
      - name: Run SASS lint
        run: cd src && npm run lint
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        phpversion: ["8.1"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.phpversion }}
          coverage: xdebug
      - name: Install Dependencies
        run: |
          cp src/.env-example src/.env && cp .env-example .env
          ./setup.sh
      - name: Test
        run: cd src && EASYPOST_TEST_API_KEY=123 EASYPOST_PROD_API_KEY=123 composer coverage
      - name: Coveralls
        if: github.ref == 'refs/heads/main'
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cd src && ./bin/php-coveralls --coverage_clover=build/logs/clover.xml -v
  deploy:
    needs: ["docker", "lint-php", "lint-sass", "test"]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Harvey
        if: github.ref == 'refs/heads/main'
        uses: distributhor/workflow-webhook@v2
        env:
          webhook_type: "json-extended"
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
          data: '{ "deployment_type": "deploy", "prod_compose": true, "healthcheck": ["easypost-tools-ui-easypost-tools-ui-1", "easypost-tools-ui-easypost-tools-ui-2", "easypost-tools-ui-easypost-tools-db-1"] }'
